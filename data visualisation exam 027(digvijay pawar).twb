<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='matches.csv (Multiple Connections)' inline='true' name='federated.00dq5sn1rcekt619ggj3k1fqvox1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='textscan.0itn3eb164rw3d1e1fmui063mec2'>
            <connection class='textscan' directory='C:/Users/DIGVIJAY/Downloads' filename='matches.csv' password='' server='' />
          </named-connection>
          <named-connection caption='deliveries' name='textscan.0l8cq8e1hal30t15fxh8w0ezzn06'>
            <connection class='textscan' directory='C:/Users/DIGVIJAY/Downloads' filename='deliveries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0itn3eb164rw3d1e1fmui063mec2' name='matches.csv' table='[matches#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
            <column datatype='string' name='home_team' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0itn3eb164rw3d1e1fmui063mec2' name='matches.csv' table='[matches#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
            <column datatype='string' name='home_team' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_team]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>home_team</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_AABEDB57176447AA9B651C4B67B57767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_AABEDB57176447AA9B651C4B67B57767]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Home Team' datatype='string' name='[home_team]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='matches.csv' id='matches.csv_AABEDB57176447AA9B651C4B67B57767'>
            <properties context=''>
              <relation connection='textscan.0itn3eb164rw3d1e1fmui063mec2' name='matches.csv' table='[matches#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                  <column datatype='string' name='home_team' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='deliveries' inline='true' name='federated.0do937r1hmg62e1ayf6ol160ng0s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='textscan.1nhfcw40ezmvfy11o5qsx1r0qmkt'>
            <connection class='textscan' directory='C:/Users/DIGVIJAY/Downloads' filename='deliveries.csv' password='' server='' />
          </named-connection>
          <named-connection caption='matches' name='textscan.0i89v220helxa31b9jcmr0i1qzle'>
            <connection class='textscan' directory='C:/Users/DIGVIJAY/Downloads' filename='matches.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1nhfcw40ezmvfy11o5qsx1r0qmkt' name='deliveries.csv' table='[deliveries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='string' name='batting_team' ordinal='2' />
            <column datatype='string' name='bowling_team' ordinal='3' />
            <column datatype='integer' name='over' ordinal='4' />
            <column datatype='integer' name='ball' ordinal='5' />
            <column datatype='string' name='batsman' ordinal='6' />
            <column datatype='string' name='non_striker' ordinal='7' />
            <column datatype='string' name='bowler' ordinal='8' />
            <column datatype='integer' name='is_super_over' ordinal='9' />
            <column datatype='integer' name='wide_runs' ordinal='10' />
            <column datatype='integer' name='bye_runs' ordinal='11' />
            <column datatype='integer' name='legbye_runs' ordinal='12' />
            <column datatype='integer' name='noball_runs' ordinal='13' />
            <column datatype='integer' name='penalty_runs' ordinal='14' />
            <column datatype='integer' name='batsman_runs' ordinal='15' />
            <column datatype='integer' name='extra_runs' ordinal='16' />
            <column datatype='integer' name='total_runs' ordinal='17' />
            <column datatype='string' name='player_dismissed' ordinal='18' />
            <column datatype='string' name='dismissal_kind' ordinal='19' />
            <column datatype='string' name='fielder' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1nhfcw40ezmvfy11o5qsx1r0qmkt' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='string' name='batting_team' ordinal='2' />
              <column datatype='string' name='bowling_team' ordinal='3' />
              <column datatype='integer' name='over' ordinal='4' />
              <column datatype='integer' name='ball' ordinal='5' />
              <column datatype='string' name='batsman' ordinal='6' />
              <column datatype='string' name='non_striker' ordinal='7' />
              <column datatype='string' name='bowler' ordinal='8' />
              <column datatype='integer' name='is_super_over' ordinal='9' />
              <column datatype='integer' name='wide_runs' ordinal='10' />
              <column datatype='integer' name='bye_runs' ordinal='11' />
              <column datatype='integer' name='legbye_runs' ordinal='12' />
              <column datatype='integer' name='noball_runs' ordinal='13' />
              <column datatype='integer' name='penalty_runs' ordinal='14' />
              <column datatype='integer' name='batsman_runs' ordinal='15' />
              <column datatype='integer' name='extra_runs' ordinal='16' />
              <column datatype='integer' name='total_runs' ordinal='17' />
              <column datatype='string' name='player_dismissed' ordinal='18' />
              <column datatype='string' name='dismissal_kind' ordinal='19' />
              <column datatype='string' name='fielder' ordinal='20' />
            </columns>
          </relation>
          <relation connection='textscan.0i89v220helxa31b9jcmr0i1qzle' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='string' name='team1' ordinal='4' />
              <column datatype='string' name='team2' ordinal='5' />
              <column datatype='string' name='toss_winner' ordinal='6' />
              <column datatype='string' name='toss_decision' ordinal='7' />
              <column datatype='string' name='result' ordinal='8' />
              <column datatype='integer' name='dl_applied' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='win_by_runs' ordinal='11' />
              <column datatype='integer' name='win_by_wickets' ordinal='12' />
              <column datatype='string' name='player_of_match' ordinal='13' />
              <column datatype='string' name='venue' ordinal='14' />
              <column datatype='string' name='umpire1' ordinal='15' />
              <column datatype='string' name='umpire2' ordinal='16' />
              <column datatype='string' name='umpire3' ordinal='17' />
              <column datatype='string' name='home_team' ordinal='18' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>24</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>home_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[home_team]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>home_team</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_59600416418444FBB87C22314D2C258F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BATSMAN AVERAGE' datatype='real' name='[Calculation_1255659931391418368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([batsman_runs])/COUNTD([id])' />
      </column>
      <column caption='Strike Rate' datatype='real' name='[Calculation_1255659931391954945]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100*SUM([batsman_runs])/SUM([ball])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_59600416418444FBB87C22314D2C258F]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Home Team' datatype='string' name='[home_team]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
      <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
      <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:batting_team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batsman:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Mukund&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BB Samantray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CJ Ferguson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DH Yagnik&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IR Jaggi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NS Naik&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PR Shah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RD Chahar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AC Blizzard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ankit Soni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA Pujara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DR Martyn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;P Dogra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TS Mills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ER Dwivedi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kamran Akmal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Rawat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;N Saini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AR Bawne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DT Patil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harpreet Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MJ Guptill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MS Wade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UT Khawaja&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;X Thalaivan Sargunam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Basil Thampi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DB Das&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;M Kaif&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Salman Butt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;U Kaul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C de Grandhomme&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MN van Wyk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RS Sodhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AN Ghosh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Juneja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSP Handscomb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VVS Laxman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CR Woakes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LA Pomersbach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SP Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vishnu Vinod&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Younis Khan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;H Das&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;R Bishnoi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Chanderpaul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UA Birla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BJ Haddin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DJ Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;F Behardien&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T Kohli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AA Bilakhia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AG Paunikar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CM Gautam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;L Ronchi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niraj Patel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RR Rossouw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SP Fleming&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T Taibu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yashpal Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BR Dunk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TD Paine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AB Barath&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C Madan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DM Bravo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JJ Roy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mohammad Ashraful&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RT Ponting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;YV Takawale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AD Nath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PA Reddy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AP Majumdar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DS Lehmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;M Klinger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Misbah-ul-Haq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RJ Quiney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunny Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UBT Chand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Chopra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anirudh Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B Sumanth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA Ingram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;J Arunkumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohammad Nabi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OA Shah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SS Shaikh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TM Srivastava&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KB Arun Karthik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NJ Maddinson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RR Sarwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VH Zol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SN Khan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Choudhary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MDKJ Perera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SS Tiwary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TR Birt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W Jaffer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bowling_team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A'>
            <properties context=''>
              <relation connection='textscan.1nhfcw40ezmvfy11o5qsx1r0qmkt' name='deliveries.csv' table='[deliveries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='string' name='batting_team' ordinal='2' />
                  <column datatype='string' name='bowling_team' ordinal='3' />
                  <column datatype='integer' name='over' ordinal='4' />
                  <column datatype='integer' name='ball' ordinal='5' />
                  <column datatype='string' name='batsman' ordinal='6' />
                  <column datatype='string' name='non_striker' ordinal='7' />
                  <column datatype='string' name='bowler' ordinal='8' />
                  <column datatype='integer' name='is_super_over' ordinal='9' />
                  <column datatype='integer' name='wide_runs' ordinal='10' />
                  <column datatype='integer' name='bye_runs' ordinal='11' />
                  <column datatype='integer' name='legbye_runs' ordinal='12' />
                  <column datatype='integer' name='noball_runs' ordinal='13' />
                  <column datatype='integer' name='penalty_runs' ordinal='14' />
                  <column datatype='integer' name='batsman_runs' ordinal='15' />
                  <column datatype='integer' name='extra_runs' ordinal='16' />
                  <column datatype='integer' name='total_runs' ordinal='17' />
                  <column datatype='string' name='player_dismissed' ordinal='18' />
                  <column datatype='string' name='dismissal_kind' ordinal='19' />
                  <column datatype='string' name='fielder' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='matches.csv' id='matches.csv_59600416418444FBB87C22314D2C258F'>
            <properties context=''>
              <relation connection='textscan.0i89v220helxa31b9jcmr0i1qzle' name='matches.csv' table='[matches#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                  <column datatype='string' name='home_team' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[match_id]' />
              <expression op='[id]' />
            </expression>
            <first-end-point object-id='deliveries.csv_FF517EFBB9294F4792CB3E7545D5049A' />
            <second-end-point object-id='matches.csv_59600416418444FBB87C22314D2C258F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name=' toss and count'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:winner:qk]</rows>
        <cols>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:toss_winner:nk]</cols>
      </table>
      <simple-id uuid='{1FF5D467-0C0A-46C5-A2DF-2A47AC43ADFC}' />
    </worksheet>
    <worksheet name='Batsman vs bowler'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]'>
            <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Kohli&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</column>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' />
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]</rows>
        <cols>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowler:nk]</cols>
      </table>
      <simple-id uuid='{E7F21F0C-760E-4551-A488-CA32D3CA32B6}' />
    </worksheet>
    <worksheet name='Batsman vs team'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:batsman:nk]' />
              <groupfilter function='member' level='[none:batsman:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</column>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' />
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]</rows>
        <cols>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]</cols>
      </table>
      <simple-id uuid='{50B523D1-CEC2-444E-BCB6-46CAB82EF82B}' />
    </worksheet>
    <worksheet name='Best Batsman'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:batting_team:nk]' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</column>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]' />
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</rows>
        <cols>[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]</cols>
      </table>
      <simple-id uuid='{4771ABDA-D167-4D46-9C23-380A7D49F00A}' />
    </worksheet>
    <worksheet name='Best batsaman avg'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column caption='BATSMAN AVERAGE' datatype='real' name='[Calculation_1255659931391418368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/COUNTD([id])' />
            </column>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1255659931391418368]' derivation='User' name='[usr:Calculation_1255659931391418368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:batting_team:nk]' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</column>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391418368:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</rows>
        <cols>([federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk] + [federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391418368:qk])</cols>
      </table>
      <simple-id uuid='{FF8690BE-46D0-4E7C-99FE-8FDE3D21EBD7}' />
    </worksheet>
    <worksheet name='Best batsman avg and strike rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column caption='BATSMAN AVERAGE' datatype='real' name='[Calculation_1255659931391418368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([batsman_runs])/COUNTD([id])' />
            </column>
            <column caption='Strike Rate' datatype='real' name='[Calculation_1255659931391954945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100*SUM([batsman_runs])/SUM([ball])' />
            </column>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1255659931391418368]' derivation='User' name='[usr:Calculation_1255659931391418368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1255659931391954945]' derivation='User' name='[usr:Calculation_1255659931391954945:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:batting_team:nk]' />
              <groupfilter function='member' level='[none:batting_team:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='member' level='[yr:date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</column>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391418368:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391418368:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391954945:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391954945:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</rows>
        <cols>([federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:batsman_runs:qk] + ([federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391418368:qk] + [federated.0do937r1hmg62e1ayf6ol160ng0s].[usr:Calculation_1255659931391954945:qk]))</cols>
      </table>
      <simple-id uuid='{42934A3F-6D0D-4F74-9547-16D3C396F051}' />
    </worksheet>
    <worksheet name='Match per venue'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]' />
              <size column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]' />
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:venue:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9503C9B7-9472-4DE0-9B81-2497832E51A6}' />
    </worksheet>
    <worksheet name='Most successful team'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column-instance column='[player_of_match]' derivation='Count' name='[cnt:player_of_match:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:player_of_match:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:player_of_match:qk]' />
              <color column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:player_of_match:qk]' />
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:player_of_match:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FC828BCE-5B71-4A28-924F-EAA76F1B4C7C}' />
    </worksheet>
    <worksheet name='Runs Scored'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' />
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:total_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:total_runs:qk]</rows>
        <cols>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</cols>
      </table>
      <simple-id uuid='{F1BDC105-6512-45C0-BEA8-B48678CB995A}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{21459AE3-4F36-4A7A-AA0A-3A186F25D7FD}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{99F4B542-8D02-42A9-988D-C9D063786F94}' />
    </worksheet>
    <worksheet name='Total no of match played per person'>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
          </datasources>
          <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]</rows>
        <cols>[federated.0do937r1hmg62e1ayf6ol160ng0s].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{3D3E03E9-EA20-4BEC-B8D1-4489A70B008F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{051F7CA3-2362-427A-B3E0-C452176A6CD0}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Match statictics'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
      </datasources>
      <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
        <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Total no of match played per person' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Best batsman avg and strike rate' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Runs Scored' w='43500' x='39700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='Match per venue' w='38900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='29625' id='9' name='Best batsman avg and strike rate' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29625' id='10' name='Best batsman avg and strike rate' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]' type-v2='filter' w='16000' x='83200' y='30625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29625' id='12' name='Runs Scored' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' type-v2='color' w='16000' x='83200' y='60250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='16' name='Match per venue' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]' type-v2='color' w='16000' x='83200' y='89875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Match per venue' w='38900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='16' name='Match per venue' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]' type-v2='color' w='16000' x='83200' y='89875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Runs Scored' w='43500' x='39700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29625' id='12' name='Runs Scored' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' type-v2='color' w='16000' x='83200' y='60250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29625' id='9' mode='checkdropdown' name='Best batsman avg and strike rate' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29625' id='10' mode='checkdropdown' name='Best batsman avg and strike rate' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]' type-v2='filter' w='16000' x='83200' y='30625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Best batsman avg and strike rate' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Total no of match played per person' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{97269612-FDBD-4955-AD4D-B12EE9969FF2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Team statictics'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Batsman vs team' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Most successful team' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Best batsaman avg' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='37875' id='8' name='Batsman vs team' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='10' name='Most successful team' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:player_of_match:qk]' type-v2='color' w='16000' x='83200' y='38875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Batsman vs team' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37875' id='8' name='Batsman vs team' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Most successful team' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='10' name='Most successful team' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:player_of_match:qk]' type-v2='color' w='16000' x='83200' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Best batsaman avg' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{196A5AFF-6337-4FDB-A1EE-3665EC56E031}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='player statictics'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='deliveries' name='federated.0do937r1hmg62e1ayf6ol160ng0s' />
      </datasources>
      <datasource-dependencies datasource='federated.0do937r1hmg62e1ayf6ol160ng0s'>
        <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
        <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='54200' x='800' y='1000'>
              <zone h='49000' id='3' name='Batsman vs team' w='54200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Batsman vs bowler' w='54200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='98000' id='11' name='Best batsaman avg' w='28200' x='55000' y='1000'>
              <layout-cache minwidth='282' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='37875' id='8' name='Batsman vs team' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60125' id='10' name='Batsman vs bowler' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' type-v2='filter' w='16000' x='83200' y='38875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Batsman vs team' w='54200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37875' id='8' name='Batsman vs team' pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='11' is-fixed='true' name='Best batsaman avg' w='28200' x='55000' y='1000'>
                  <layout-cache minwidth='282' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='60125' id='10' mode='checkdropdown' name='Batsman vs bowler' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' type-v2='filter' w='16000' x='83200' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Batsman vs bowler' w='54200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6D0D1FB9-943E-4CAA-B00F-E0235EFBB678}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Runs Scored'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70CE97F7-4748-4D25-B3D4-A228725D787F}' />
    </window>
    <window class='worksheet' name='Match per venue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:id:qk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:venue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1F4034B-0AEF-4CE0-82E1-D0E6A0581696}' />
    </window>
    <window class='worksheet' name=' toss and count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:toss_winner:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{512DB1EF-A6FD-4FA4-B004-06593F1A07B2}' />
    </window>
    <window class='worksheet' name='Best Batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15D0F87F-9E27-4714-8E43-68E43E3482B7}' />
    </window>
    <window class='worksheet' name='Best batsaman avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D792792D-72FE-4EA6-B663-A8F72B082E43}' />
    </window>
    <window class='worksheet' name='Best batsman avg and strike rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]' type='filter' />
            <card param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batting_team:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D652E230-EEF0-4462-BFBF-1C7402DE54AC}' />
    </window>
    <window class='worksheet' name='Batsman vs team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowler:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{729C8D5D-ECDE-4562-ACFC-A18672FB4F8D}' />
    </window>
    <window class='worksheet' name='Batsman vs bowler'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowler:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAF5B163-1502-4EFE-AA20-BCA6BB4BE5ED}' />
    </window>
    <window class='worksheet' name='Total no of match played per person'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:id:ok]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60EB29B8-EE33-41DD-98C4-12C636F3A78E}' />
    </window>
    <window class='worksheet' name='Most successful team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0do937r1hmg62e1ayf6ol160ng0s].[cnt:player_of_match:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:player_of_match:nk]</field>
            <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F84852E0-08C1-48C9-B778-8F1895D08D1A}' />
    </window>
    <window class='dashboard' name='Match statictics'>
      <viewpoints>
        <viewpoint name='Best batsman avg and strike rate' />
        <viewpoint name='Match per venue' />
        <viewpoint name='Runs Scored'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0do937r1hmg62e1ayf6ol160ng0s].[sum:total_runs:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:batsman:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total no of match played per person'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E8B51850-8A08-474C-AB36-AE65D47DF89B}' />
    </window>
    <window class='dashboard' name='player statictics'>
      <viewpoints>
        <viewpoint name='Batsman vs bowler' />
        <viewpoint name='Batsman vs team'>
          <highlight>
            <color-one-way>
              <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Best batsaman avg' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E9BB7C81-856E-4A1D-B818-ABE6B1DE16D1}' />
    </window>
    <window class='dashboard' maximized='true' name='Team statictics'>
      <viewpoints>
        <viewpoint name='Batsman vs team'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0do937r1hmg62e1ayf6ol160ng0s].[none:bowling_team:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Best batsaman avg' />
        <viewpoint name='Most successful team' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C50758CC-9D26-4AEE-9323-3D0ADFB44038}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F56317B2-8922-477B-8B30-5E7572CF003F}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{DF9B9B27-A3A8-491E-8BD7-5EE699607306}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4CDCD1D6-41BD-4EB8-851E-5C726B14B5BA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' toss and count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Batsman vs bowler' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Batsman vs team' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Best Batsman' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Best batsaman avg' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Best batsman avg and strike rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Match per venue' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Match statictics' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most successful team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Runs Scored' width='192'>
      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
      oKsRAhB0Nf8fsiC4gtlyFPIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Team statictics' width='192'>
      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
      dSAPyqG/IQ6hdhqISvtIjdp3f69LQpD8OMThHeBgP4kZEx0VxD7tm9vrxymJxBNZfIu9iHNq
      P4XH7aZVrTAoqxjVxyS6mJvyU20MD6RabTg4+DbI5wu02y3cgoVgLEo6sYtldpZsZg/V5KJR
      LVNpqgS9DiqVGplslrmpaYrxTaYno+iKiirXKZWrhIKnPyTDZrNx5coVdnZ2mJubOymRXqvV
      iMViyLKMrusUi8WRE+C0WF5eJplMomkaa2tr3L59my+++IKbN2+SSqWYmZkZXxygq3TI5otU
      Gy2WFy4Y2srFHPHtBFev36Bfv5ZN7lBqqfh8EwYbvFop0WwfmQXB8CSWPrs9vr3DbirLlfeu
      GvpocoOHj+O4PG4WLxizu0bFASq5FFv7ZWZmpod8gHR6H8kCFv/MSQqj0q7zaO0xwclZojOT
      WMy9yb679YxO92ghWJjvaYTQdZKJXaw2iWA4bOjTVTpksnnyxTLvXzVmkX3X8bZxgLOsgfSq
      a/W3j5VueGEDDyK1n2ZpeclAQantOqI7gNtURRzQAh2ZTTuY7QGD3yCIEovLKywuGwNd0JMi
      yOUyYJwAo+IAbaWLKFqG8ovhSPdT7pq4GOg5qDuJfa7fuM7m5q5hIMPo2MHO1lMcbi+1lsLk
      QJ/0QZZYbJZo9PsVBDsLvOwoqnFdq799bDToo4df02w28XiNwZNcJoVZsHJwcEC3f+8xmag3
      24QnvEP0oCAIZHc3ODhIUxnQiVUKWR4/2WAvlTZ8LrpCRPwS4dCwLetx2rBFLlLKGOlJUbTT
      qlfovmRdMGttXF4jzRoO+Nna2qHbVYYSYkbB7nBQqzWolXNDfRLbmzx//pz4bnJE7/9fnOXB
      4K+6Vn/72HaAxcUl8qVDag2j7LhcbbCyskJh95lBDm0WrLQPs3y1nuOjnxgrAXTlFpptAg3z
      iRT65HqHNXRN5vDwEKI9uvFFWZKpoHFbliQJpdNEbMn4A0bbtavBbCyG/BLhWzm7T7Wg4o9E
      TqQQvkAYX+D1gkBT0bmRbR/cvI0oDifXfB/QrmTZ3NnD6/EjmGQa9RYrK68WtD1Ze4gg+bBZ
      TLis0LVPEJl4tSm1vfmU6mGNi1dv4LIeDehqKU/6YB+zyUld6eD1+Lkw19ux27Uy//p6g0vn
      IpSrh4RmL49vB3j+bIODTAb3gLDM75Z4+vQZmYZukDZjMjMZneP2zR9jE40m0LPNONc+vMW0
      pFEdYAhFu53V1atMDOQPWF1BaObZTRp3BjjW8Jc20UQjL93tdqi2VEya0aE+LOXwRi8Ti03h
      OYPxufboAc+frvOPr/5JvY+lbTdrpFIp0tn829/kHaNSbLB0ZRVTt0M6voErdDozLhgIUM3l
      aStt4unSqQY/gC5YWb0QoVjr/VZOp0RXF7EJ5pNn6cfXDx9hUtuUWxqrV5ZoFCvj2wGWLr+H
      poPJbHRGwtMxwtPD/28WLCOdKLtVIL61idrq4B5gPAvZNI1Gk0DYqOFXa1k0Z4S50EDwRdcJ
      TARp2UTsfdNfbdexST6cWhXHAEefyZdYXlqmlHhGoQXB0cXeTgWf10dbVolOTxl8GrfLRTZf
      QjjbjMh3gtBMkPjaOoHINPMr12jVC+hhz1DgcBCKoiBKEm63l7lwiHS+wnTo1Qk4kmjhSbLK
      pdUewbC3l8BiEfCGvCfP0o+Pbt8hmUzhFE2sr8WZXVwZoxp0BMrFPI3jhI/+oNabIp3cPank
      sLzYY5u6cpNH609xeSdYvDB38vnO5gYOt4f9ZJ5rH/zI8APl0kncoeEyi5nULvWWgt5ViV24
      ZCjN8iZI7sZpKxqhyRlDMa1y+jkHHS+xsHuolMt3HW/LAn1beOfHuvgDIfKJDfb28yhnMPVG
      VXJQmyUOqgp0jTbTkRPaRLJpKAMr7agyi1PRORYWFlhcfvvBD6N1RYouYNY6pDOZl7b/gLPH
      t3JM6qj82jeBZBdptFqINqNdYvNEiE0UsdiMK+k3OaGVSgW7fbiO0VmiXq8Tjc3SaHWwDHDV
      Po+bZLGEmfHLoX/AEb6Vg710s41wOIiuvF3ua1duki1WKBSKWK3GuSxX8yjm1zPWRcGM8man
      fp4aLpcLwWpDFDS0gaJdoiuAz24iGAyN6P0DzhrC3bt3777rmx6Wi+gWO61G9bUPY+uHrmm0
      OzIejwe7XUJy9FbvVCpBo6ngkBxDqstRECwWdF2n05Hx+8aXlhh//gS5C/VGm8BE7/t3ykmq
      lgit8gGh0PdrEsiyzFd//yuV0j5b+22apQyC1cqXX/6FmWiUzfgOFsFEIpGgXi1jcbjZerKO
      ze0jm9zhsKXhdTv53ee/5XE8wcxkGIuuUDqskU6nsdid7G1u4PBMIFoEnvz7b/x3u8LW5haH
      +9v850kcv8PM7//wR5ymNvceJ3BKTj779a/46MNVfvHL3/Dx9Vk++exPfPzTBT795HMktcj/
      AHjZujUGZxmyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total no of match played per person' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='player statictics' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
